# coding: utf-8

"""
    spice-api

    API for managing SPICE lab data in the EERL lab

    The version of the OpenAPI document: 0.3.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spice_client.models.dilution_summary import DilutionSummary

class TestDilutionSummary(unittest.TestCase):
    """DilutionSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DilutionSummary:
        """Test DilutionSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DilutionSummary`
        """
        model = DilutionSummary()
        if include_optional:
            return DilutionSummary(
                dilution_factor = 56,
                statistics = spice_client.models.nucleation_statistics.NucleationStatistics(
                    frozen_count = 0, 
                    liquid_count = 0, 
                    mean_nucleation_temp_celsius = 1.337, 
                    median_nucleation_time_seconds = 56, 
                    success_rate = 1.337, 
                    total_wells = 0, )
            )
        else:
            return DilutionSummary(
                dilution_factor = 56,
                statistics = spice_client.models.nucleation_statistics.NucleationStatistics(
                    frozen_count = 0, 
                    liquid_count = 0, 
                    mean_nucleation_temp_celsius = 1.337, 
                    median_nucleation_time_seconds = 56, 
                    success_rate = 1.337, 
                    total_wells = 0, ),
        )
        """

    def testDilutionSummary(self):
        """Test DilutionSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
