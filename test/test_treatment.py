# coding: utf-8

"""
    spice-api

    API for managing SPICE lab data in the EERL lab

    The version of the OpenAPI document: 0.3.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spice_client.models.treatment import Treatment

class TestTreatment(unittest.TestCase):
    """Treatment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Treatment:
        """Test Treatment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Treatment`
        """
        model = Treatment()
        if include_optional:
            return Treatment(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dilution_summaries = [
                    spice_client.models.dilution_summary.DilutionSummary(
                        dilution_factor = 56, 
                        statistics = spice_client.models.nucleation_statistics.NucleationStatistics(
                            frozen_count = 0, 
                            liquid_count = 0, 
                            mean_nucleation_temp_celsius = 1.337, 
                            median_nucleation_time_seconds = 56, 
                            success_rate = 1.337, 
                            total_wells = 0, ), )
                    ],
                enzyme_volume_litres = '',
                experimental_results = [
                    spice_client.models.nucleation_event.NucleationEvent(
                        dilution_factor = 56, 
                        experiment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        experiment_id = '', 
                        experiment_name = '', 
                        final_state = '', 
                        freezing_temperature_avg = '', 
                        freezing_time_seconds = 56, 
                        nucleation_temperature_avg_celsius = '', 
                        nucleation_time_seconds = 56, 
                        tray_name = '', 
                        treatment_id = '', 
                        treatment_name = '', 
                        well_coordinate = '', )
                    ],
                id = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = 'none',
                notes = '',
                sample_id = '',
                statistics = spice_client.models.nucleation_statistics.NucleationStatistics(
                    frozen_count = 0, 
                    liquid_count = 0, 
                    mean_nucleation_temp_celsius = 1.337, 
                    median_nucleation_time_seconds = 56, 
                    success_rate = 1.337, 
                    total_wells = 0, )
            )
        else:
            return Treatment(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dilution_summaries = [
                    spice_client.models.dilution_summary.DilutionSummary(
                        dilution_factor = 56, 
                        statistics = spice_client.models.nucleation_statistics.NucleationStatistics(
                            frozen_count = 0, 
                            liquid_count = 0, 
                            mean_nucleation_temp_celsius = 1.337, 
                            median_nucleation_time_seconds = 56, 
                            success_rate = 1.337, 
                            total_wells = 0, ), )
                    ],
                experimental_results = [
                    spice_client.models.nucleation_event.NucleationEvent(
                        dilution_factor = 56, 
                        experiment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        experiment_id = '', 
                        experiment_name = '', 
                        final_state = '', 
                        freezing_temperature_avg = '', 
                        freezing_time_seconds = 56, 
                        nucleation_temperature_avg_celsius = '', 
                        nucleation_time_seconds = 56, 
                        tray_name = '', 
                        treatment_id = '', 
                        treatment_name = '', 
                        well_coordinate = '', )
                    ],
                id = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = 'none',
        )
        """

    def testTreatment(self):
        """Test Treatment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
